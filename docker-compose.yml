services:
  codelet_database:
    image: postgres:latest
    container_name: codelet_database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGPORT: 5433
    ports:
      - "3100:5433"
    restart: unless-stopped
    volumes:
      - codelet_database-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d codelet_database -h localhost -p 5433"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - codelet-network
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '1'


  codelet_server:
    build:
      context: ./server
      target: final
      dockerfile: Dockerfile
    container_name: codelet_server
    env_file:
      - .env
    restart: unless-stopped
    environment:
      - APP_PORT=:3021
      - DATABASE_URL=${DATABASE_URL}
      - GOMAXPROCS=2
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "3021:3021"
    depends_on:
      codelet_database:
        condition: service_healthy
    user: "${UID:-10001}:${GID:-10001}"
    volumes:
      - ./logs:/src/logs
    networks:
      - codelet-network
    deploy:
      resources:
        limits:
          memory: 12G
          cpus: '3'

networks:
  codelet-network:
    driver: bridge

volumes:
  codelet_database-data:
