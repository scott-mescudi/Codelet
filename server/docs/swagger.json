{
    "swagger": "2.0",
    "info": {
        "description": "API documentation for the Codelet service",
        "version": "1.0.0",
        "title": "Codelet API"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "schemes": [
        "http"
    ],
    "paths": {
        "/user/snippets": {
            "get": {
                "summary": "Get user snippets",
                "description": "Retrieve snippets for a specific user",
                "tags": [
                    "snippets"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer JWT token"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "description": "Limit the number of snippets"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "description": "Page number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Snippet"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request parameters",
                                "code": 400
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Internal server error",
                                "code": 500
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new snippet",
                "description": "Create a new snippet for a user",
                "tags": [
                    "snippets"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer JWT token"
                    },
                    {
                        "name": "snippet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Snippet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request parameters",
                                "code": 400
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Internal server error",
                                "code": 500
                            }
                        }
                    }
                }
            }
        },
        "/public/snippets": {
            "get": {
                "summary": "Get public snippets",
                "description": "Retrieve public snippets",
                "tags": [
                    "snippets"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "description": "Limit the number of snippets"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "description": "Page number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Snippet"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request parameters",
                                "code": 400
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Internal server error",
                                "code": 500
                            }
                        }
                    }
                }
            }
        },
        "/user/snippets/{id}": {
            "delete": {
                "summary": "Delete a snippet",
                "description": "Delete a snippet by ID",
                "tags": [
                    "snippets"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer JWT token"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Snippet ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request parameters",
                                "code": 400
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Internal server error",
                                "code": 500
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "summary": "Signup a new user",
                "description": "Register a new user with username, email, role, and password",
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSignup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request parameters",
                                "code": 400
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request payload",
                                "code": 422
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Login a user",
                "description": "Login a user with email and password",
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request parameters",
                                "code": 400
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request payload",
                                "code": 422
                            }
                        }
                    }
                }
            }
        },
        "/refresh": {
            "get": {
                "summary": "Refresh access token",
                "description": "Refresh the access token using the refresh token",
                "tags": [
                    "users"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid or expired refresh token",
                                "code": 401
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Internal server error",
                                "code": 500
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "summary": "Logout a user",
                "description": "Logout a user by invalidating the refresh token",
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer JWT token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request parameters",
                                "code": 400
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Internal server error",
                                "code": 500
                            }
                        }
                    }
                }
            }
        },
        "/update/password": {
            "post": {
                "summary": "Change user password",
                "description": "Change the password of a logged-in user",
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer JWT token"
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request parameters",
                                "code": 400
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Invalid request payload",
                                "code": 422
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Snippet": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "private": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "UserSignup": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "UserLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ChangePassword": {
            "type": "object",
            "properties": {
                "oldPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                }
            }
        }
    }
}